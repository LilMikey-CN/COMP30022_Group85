---
config:
  look: neo
  theme: base
---
erDiagram
    USERS_COLLECTION {
        string description "Root collection containing all users"
    }
    
    USER_DOCUMENT {
        string uid PK "Firebase Auth UID (Document ID)"
        string email "Guardian's email from Firebase Auth"
        string displayName "Guardian's name"
        boolean emailVerified "from Firebase Auth"
        string avatar_url "Profile image URL"
        string mobile_phone "Guardian's phone"
        string contact_address "Guardian's address"
        timestamp created_at "Firebase server timestamp"
        timestamp updated_at "Firebase server timestamp"
        map client_profile "Embedded client profile data"
    }
    
    CLIENT_PROFILE_MAP {
        string full_name "Client's full name"
        date date_of_birth "Client's DOB"
        string sex "Client's sex/gender"
        int age "Calculated or entered age"
        string mobile_number "Client's mobile"
        string email_address "Client's email"
        string postal_address "Client's address"
        array emergency_contacts "Array of contact objects"
        string notes "General care notes"
        string medical_conditions "Medical conditions"
        string allergies "Known allergies"
        string medications "Current medications"
        string accessibility_needs "Accessibility requirements"
        map latest_vitals "Latest vital signs"
        boolean is_active "Profile active status"
        timestamp created_at "Creation timestamp"
        timestamp updated_at "Last update timestamp"
    }
    
    CARE_TASKS_SUBCOLLECTION {
        string description "Subcollection under each user"
    }
    
    CARE_TASK_DOCUMENT {
        string id PK "Auto-generated document ID"
        string name "Task name"
        string description "Task description"
        date start_date "Task start date"
        date end_date "Optional end date"
        int recurrence_interval_days "0=one-off, 7=weekly, etc"
        string task_type "PURCHASE or GENERAL"
        boolean is_active "Soft delete flag"
        number estimated_unit_cost "Cost per unit"
        int quantity_per_purchase "Default purchase quantity"
        string quantity_unit "piece, pack, bottle, etc"
        string category_id "Reference to category entry by ID"
        timestamp deactivated_at "Soft delete timestamp"
        timestamp created_at "Creation timestamp"
        timestamp updated_at "Last update timestamp"
    }
    
    USER_CATEGORIES_SUBCOLLECTION {
        string description "Subcollection under each user for reusable categories"
    }
    
    CATEGORY_OPTIONS_DOCUMENT {
        string id PK "Document ID (options)"
        array categories "Array of category entries"
        timestamp created_at "Creation timestamp"
        timestamp updated_at "Last update timestamp"
    }
    
    CATEGORY_ENTRY {
        string id PK "Category identifier referenced by care tasks"
        string name "Category name"
        string description "Category description"
        string color_code "UI display color"
        timestamp created_at "Creation timestamp"
        timestamp updated_at "Last update timestamp"
    }
    
    TASK_EXECUTIONS_SUBCOLLECTION {
        string description "Subcollection under each care task"
    }
    
    TASK_EXECUTION_DOCUMENT {
        string id PK "Auto-generated document ID"
        string status "TODO, DONE, COVERED, REFUNDED, PARTIALLY_REFUNDED, CANCELLED"
        int quantity_purchased "Actual quantity bought"
        string quantity_unit "Unit of measurement"
        number actual_cost "Total cost for quantity"
        string evidence_url "Receipt/proof URL"
        date scheduled_date "When task should be done"
        date execution_date "When actually completed"
        reference covered_by_execution_ref "Reference to bulk purchase execution"
        string executed_by_uid "User UID who executed"
        string notes "Optional notes"
        map refund "Optional refund details - null if no refund"
        timestamp created_at "Creation timestamp"
        timestamp updated_at "Last update timestamp"
    }
    
    REFUND_MAP {
        number refund_amount "Amount refunded"
        string refund_reason "Reason for refund"
        string refund_evidence_url "Refund receipt URL"
        date refund_date "Date of refund"
        string refunded_by_uid "User who processed refund"
        timestamp created_at "When refund was recorded"
    }
    
    USERS_COLLECTION ||--o{ USER_DOCUMENT : contains
    USER_DOCUMENT ||--|| CLIENT_PROFILE_MAP : "embeds"
    USER_DOCUMENT ||--o{ CARE_TASKS_SUBCOLLECTION : "has"
    CARE_TASKS_SUBCOLLECTION ||--o{ CARE_TASK_DOCUMENT : contains
    CARE_TASK_DOCUMENT ||--|| CATEGORY_MAP : "embeds"
    CARE_TASK_DOCUMENT ||--o{ TASK_EXECUTIONS_SUBCOLLECTION : "has"
    TASK_EXECUTIONS_SUBCOLLECTION ||--o{ TASK_EXECUTION_DOCUMENT : contains
    TASK_EXECUTION_DOCUMENT ||--o| REFUND_MAP : "optionally embeds"
    TASK_EXECUTION_DOCUMENT ||..|| TASK_EXECUTION_DOCUMENT : "references via covered_by_execution_ref"
    USER_DOCUMENT ||--o{ USER_CATEGORIES_SUBCOLLECTION : "has"
    USER_CATEGORIES_SUBCOLLECTION ||--|| CATEGORY_OPTIONS_DOCUMENT : "contains"
    CATEGORY_OPTIONS_DOCUMENT ||--o{ CATEGORY_ENTRY : "lists entries"
    CARE_TASK_DOCUMENT }o--|| CATEGORY_ENTRY : "references via category_id"
